diff --git a/mediapipe/framework/port/build_config.bzl b/mediapipe/framework/port/build_config.bzl
index 41f04aba..79006082 100644
--- a/mediapipe/framework/port/build_config.bzl
+++ b/mediapipe/framework/port/build_config.bzl
@@ -8,7 +8,7 @@ load(
     _mediapipe_cc_proto_library = "mediapipe_cc_proto_library",
     _mediapipe_proto_library = "mediapipe_proto_library",
 )
-load("@npm//@bazel/typescript:index.bzl", "ts_project")
+#load("@npm//@bazel/typescript:index.bzl", "ts_project")

 # TODO: enable def_rewrite once alias proto sources are generated.
 def mediapipe_proto_library(def_rewrite = False, **kwargs):
@@ -43,20 +43,20 @@ def mediapipe_ts_library(
     """
     _ignore = [allow_unoptimized_namespaces]  # buildifier: disable=unused-variable

-    ts_project(**provided_args(
-        name = name,
-        srcs = srcs,
-        visibility = visibility,
-        deps = deps + [
-            "@npm//@types/jasmine",
-            "@npm//@types/node",
-            "@npm//@types/offscreencanvas",
-            "@npm//@webgpu/types",
-            "@npm//@types/google-protobuf",
-        ],
-        testonly = testonly,
-        declaration = True,
-        tsconfig = "//:tsconfig.json",
-    ))
+    #ts_project(**provided_args(
+    #    name = name,
+    #    srcs = srcs,
+    #    visibility = visibility,
+    #    deps = deps + [
+    #        "@npm//@types/jasmine",
+    #        "@npm//@types/node",
+    #        "@npm//@types/offscreencanvas",
+    "@npm//@types/offscreencanvas",
+    #        "@npm//@types/google-protobuf",
+    #    ],
+    #    testonly = testonly,
+    #    declaration = True,
+    #    tsconfig = "//:tsconfig.json",
+    #))

 def mediapipe_ts_declaration(
         name,
diff --git a/mediapipe/framework/tool/mediapipe_proto.bzl b/mediapipe/framework/tool/mediapipe_proto.bzl
index 527774ff..81d7680f 100644
--- a/mediapipe/framework/tool/mediapipe_proto.bzl
+++ b/mediapipe/framework/tool/mediapipe_proto.bzl
@@ -5,7 +5,7 @@ load("//mediapipe/framework/tool:mediapipe_graph.bzl", "mediapipe_options_librar
 load("//mediapipe/framework/tool:mediapipe_proto_allowlist.bzl", "rewrite_target_list")
 load("@com_google_protobuf//:protobuf.bzl", "cc_proto_library", "py_proto_library")
 load("@rules_proto//proto:defs.bzl", "proto_library")
-load("@rules_proto_grpc//js:defs.bzl", "js_proto_library")
+#load("@rules_proto_grpc//js:defs.bzl", "js_proto_library")

 def provided_args(**kwargs):
     """Returns the keyword arguments omitting None arguments."""
@@ -135,16 +135,16 @@ def mediapipe_proto_library_impl(
             compatible_with = compatible_with,
         ))

-    if def_jspb_proto:
-        mediapipe_js_proto_library(**provided_args(
-            name = replace_suffix(name, "_proto", "_jspb_proto"),
-            srcs = srcs,
-            deps = proto_deps,
-            lib_proto_deps = deps,
-            visibility = visibility,
-            testonly = testonly,
-            compatible_with = compatible_with,
-        ))
+    #if def_jspb_proto:
+    #    mediapipe_js_proto_library(**provided_args(
+    #        name = replace_suffix(name, "_proto", "_jspb_proto"),
+    #        srcs = srcs,
+    #        deps = proto_deps,
+    #        lib_proto_deps = deps,
+    #        visibility = visibility,
+    #        testonly = testonly,
+    #        compatible_with = compatible_with,
+    #    ))

     if def_options_lib:
         cc_deps = replace_deps(deps, "_proto", "_cc_proto")
@@ -425,16 +425,16 @@ def mediapipe_js_proto_library_oss(
         deps = lib_proto_deps,
         visibility = visibility,
     )
-    js_proto_library(
-        name = name,
-        protos = [replace_suffix(name, "_jspb_proto", "_lib_proto")],
-        output_mode = "NO_PREFIX_FLAT",
-        # Need to specify this to work around bug in js_proto_library()
-        # https://github.com/bazelbuild/rules_nodejs/issues/3503
-        legacy_path = "unused",
-        deps = js_deps,
-        visibility = visibility,
-    )
+    #js_proto_library(
+    #    name = name,
+    #    protos = [replace_suffix(name, "_jspb_proto", "_lib_proto")],
+    #    output_mode = "NO_PREFIX_FLAT",
+    #    # Need to specify this to work around bug in js_proto_library()
+    #    # https://github.com/bazelbuild/rules_nodejs/issues/3503
+    #    legacy_path = "unused",
+    #    deps = js_deps,
+    #    visibility = visibility,
+    #)

 def mediapipe_py_proto_library(**kwargs):
     mediapipe_py_proto_library_oss(**kwargs)