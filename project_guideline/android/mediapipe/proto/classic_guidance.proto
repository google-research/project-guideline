// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package guideline;

import "project_guideline/android/mediapipe/proto/line_detection.proto";

// option cc_api_version = 2;
// option java_api_version = 2;
option java_multiple_files = true;
option java_package = "com.google.research.guideline.proto";
option optimize_for = LITE_RUNTIME;

// Guidance instructions for the Guideline classic mode.
message ClassicGuidance {
  // The raw line detection for the last frame.
  optional LineDetection line_detection = 1;

  // Whether the runner should stop due to insufficient guidance confidence.
  optional bool stop = 2;

  // The filtered lateral position of the line relative to the runner. The value
  // is in the range [-1, 1], with -1 meaning the line is to the left and 1
  // meaning the line is to the right.
  optional float lateral_position = 3;

  // The filtered detected curve angle of the line ahead of the runner. An angle
  // of 0 degrees means no curve is detected, a positive angle means the line
  // is curving to the right, and a negative angle means the line is
  // curving to the left.
  optional float detected_curve_angle_degrees = 4;
}
